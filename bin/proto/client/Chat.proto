syntax = "proto3";

package Chat;
option go_package = "./Chat";

//------------------------------------------------------------------
// 公用结构
//------------------------------------------------------------------
// 游戏状态
enum EChatChannelType {
  EChatCH_None = 0;        //
  EChatCH_World = 1;       // 世界聊天
  EChatCH_Team = 2;       // 小队聊天
  EChatCH_Private = 3;       // 私聊
}

// 聊天消息的结构
message ChatMessageStruct {
  int64                       SenderUID = 1;        // 消息发送者
  string                      SenderName = 2;        // 发送者名字
  int64                       AccepterUID = 3;        // 消息接受者
  int64                       SendTime = 4;        // 消息发送时间
  string                      Content = 5;        // 消息内容
  int64                       Number = 6;        // 消息的编号
}

// 玩家收到新的消息推送结构
message ChatNewMessageStruct {
  EChatChannelType            ChannelType = 1;        // 消息类型
  string                      ChannelID = 2;        // 房间ID
  repeated ChatMessageStruct  Messages = 3;        // 消息细节
}

// 最近聊天记录
message ChatRecentStruct {
  int64                       RecordUID = 1;        // 消息发送者
  string                      RecordName = 2;        // 发送者名字
  int64                       SendTime = 3;        // 消息发送时间
  string                      Content = 4;        // 消息内容
}

//------------------------------------------------------------------
// c2s
//------------------------------------------------------------------
//------------------------------------------------------------------
// 请求: 发送聊天消息
//------------------------------------------------------------------
message ReqChatSendMessage {
  EChatChannelType            ChannelType = 1;        // 消息类型
  string                      ChannelID = 2;        // 房间ID
  int64                       AccepterUID = 3;        // 消息接受者(私聊使用单一频道需要)
  string                      Content = 4;        // 消息内容
}

//------------------------------------------------------------------
// 请求: 获取历史消息
//------------------------------------------------------------------
message ReqChatGetHistoryMessage {
  EChatChannelType            ChannelType = 1;        // 消息类型
  string                      ChannelID = 2;        // 房间ID
  int64                       AccepterUID = 3;        // 私聊目标角色UID
  int64                       Cursor = 4;        // 游标
}

//------------------------------------------------------------------
// 请求: 最近聊天列表
//------------------------------------------------------------------
message ReqChatRecentList {
}

//------------------------------------------------------------------
// s2c
//------------------------------------------------------------------
//------------------------------------------------------------------
// 推送: 收到消息
//------------------------------------------------------------------
message RspChatReceiveMessage {
  repeated ChatNewMessageStruct   NewMessages = 1;         // 玩家收到的新消息
}

//------------------------------------------------------------------
// 推送: 历史消息
//------------------------------------------------------------------
message RspChatHistoryMessage {
  EChatChannelType            ChannelType = 1;        // 消息类型
  string                      ChannelID = 2;        // 房间ID
  int64                       Cursor = 3;        // 游标
  repeated ChatMessageStruct  Messages = 4;        // 消息数组
  int64                       AccepterUID = 5;        // 玩家UID
}

//------------------------------------------------------------------
// 推送: 最近聊天列表
//------------------------------------------------------------------
message RspChatRecentList {
  map<string, ChatRecentStruct> PrivateRecents = 1;        // 好友最近聊天
  map<string, ChatRecentStruct> TeamRecents = 2;           // 队伍最近聊天记录
}